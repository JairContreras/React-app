{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jair_\\\\Documents\\\\Web Development\\\\Cursera\\\\React\\\\my-app\\\\src\\\\components\\\\DishdetailComponent.js\";\nimport React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Row, Label } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nfunction RenderDish({\n  dish\n}) {\n  if (dish != null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardImg, {\n      width: \"100%\",\n      src: dish.image,\n      alt: dish.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }\n    }, dish.name), /*#__PURE__*/React.createElement(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }\n    }, dish.description))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    });\n  }\n}\n\nfunction RenderComments(props) {\n  const dish = props.comments;\n\n  if (dish != null) {\n    const cmts = dish.map(comment => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: comment.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      }, comment.comment), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }, \"-- \", comment.author, \", \\xA0\", new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'long',\n        day: '2-digit'\n      }).format(new Date(comment.date))));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \" Comments \"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-unstyled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, cmts), /*#__PURE__*/React.createElement(CommentForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    });\n  }\n}\n\nconst maxLength = len => val => !val || val.length <= len;\n\nconst minLength = len => val => val && val.length >= len;\n\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  handleSubmit(values) {\n    alert('Current State is: ' + JSON.stringify(values));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      outline: true,\n      onClick: this.toggleModal,\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-pencil fa-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 78\n      }\n    }), \" Submit Comment\"), ' ', /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.isModalOpen,\n      toggle: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, \"Submit Comment\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(LocalForm, {\n      onSubmit: values => this.handleSubmit(values),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"rating\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 37\n      }\n    }, \"Rating\"), /*#__PURE__*/React.createElement(Control.select, {\n      model: \".rating\",\n      id: \"rating\",\n      name: \"rating\",\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 41\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 41\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 41\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 41\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 41\n      }\n    }, \"5\"))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 37\n      }\n    }, \"Your Name\"), /*#__PURE__*/React.createElement(Control.text, {\n      model: \".name\",\n      id: \"name\",\n      name: \"name\",\n      className: \"form-control\",\n      validators: {\n        maxLength: maxLength(15),\n        minLength: minLength(3)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".firstname\",\n      show: \"touched\",\n      messages: {\n        minLength: 'Name must be greater than 3 characters',\n        maxLength: 'Name must be 15 characters or less'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 37\n      }\n    }, \"Comment\"), /*#__PURE__*/React.createElement(Control.textarea, {\n      model: \".comment\",\n      id: \".comment\",\n      name: \"comment\",\n      rows: \"6\",\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 37\n      }\n    }, \"Submit\"), ' '))))));\n  }\n\n}\n\nexport default function Dishdetail(props) {\n  const dishItem = /*#__PURE__*/React.createElement(RenderDish, {\n    dish: props.dish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 22\n    }\n  });\n  const commentItem = /*#__PURE__*/React.createElement(RenderComments, {\n    comments: props.comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 25\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(BreadcrumbItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 37\n    }\n  }, \"Menu\")), /*#__PURE__*/React.createElement(BreadcrumbItem, {\n    active: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  }, props.dish.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  }, props.dish.name), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, dishItem, commentItem));\n}","map":{"version":3,"sources":["C:/Users/jair_/Documents/Web Development/Cursera/React/my-app/src/components/DishdetailComponent.js"],"names":["React","Component","Card","CardImg","CardText","CardBody","CardTitle","Breadcrumb","BreadcrumbItem","Button","Modal","ModalHeader","ModalBody","Row","Label","Link","Control","LocalForm","Errors","RenderDish","dish","image","name","description","RenderComments","props","comments","cmts","map","comment","id","author","Intl","DateTimeFormat","year","month","day","format","Date","date","maxLength","len","val","length","minLength","CommentForm","constructor","state","isModalOpen","toggleModal","bind","handleSubmit","setState","values","alert","JSON","stringify","render","Dishdetail","dishItem","commentItem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem, Button,\r\n    Modal, ModalHeader, ModalBody, Row,\r\n    Label\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction RenderDish({ dish }) {\r\n    if (dish != null) {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <Card>\r\n                    <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>\r\n                            {dish.description}\r\n                        </CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction RenderComments(props) {\r\n    const dish = props.comments;\r\n    if (dish != null) {\r\n        const cmts = dish.map(comment => {\r\n            return (\r\n                <li key={comment.id}>\r\n                    <p>{comment.comment}</p>\r\n                    <p>-- {comment.author},\r\n                        &nbsp;\r\n                        {new Intl.DateTimeFormat('en-US', {\r\n                        year: 'numeric',\r\n                        month: 'long',\r\n                        day: '2-digit'\r\n                    }).format(new Date(comment.date))}\r\n                    </p>\r\n                </li>\r\n            )\r\n        });\r\n        return (\r\n            <div className='col-12 col-md-5 m-1'>\r\n                <h4> Comments </h4>\r\n                <ul className='list-unstyled'>\r\n                    {cmts}\r\n\r\n                </ul>\r\n                <CommentForm />\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        }\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button outline onClick={this.toggleModal} color=\"secondary\"><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment</Button>{' '}\r\n\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <div className=\"container\">\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"rating\">Rating</Label>\r\n                                    <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"4\">4</option>\r\n                                        <option value=\"5\">5</option>\r\n                                    </Control.select>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"name\">Your Name</Label>\r\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{ maxLength: maxLength(15), minLength: minLength(3) }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            minLength: 'Name must be greater than 3 characters',\r\n                                            maxLength: 'Name must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"comment\">Comment</Label>\r\n                                    <Control.textarea model=\".comment\" id=\".comment\" name=\"comment\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Button color=\"primary\">Submit</Button>{' '}\r\n                                </Row>\r\n                            </div>\r\n\r\n\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default function Dishdetail(props) {\r\n    const dishItem = <RenderDish dish={props.dish} />\r\n    const commentItem = <RenderComments comments={props.comments} />\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>{props.dish.name}</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                {dishItem}\r\n                {commentItem}\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}