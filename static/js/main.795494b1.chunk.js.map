{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/HeaderComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/DishdetailComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","key","id","to","width","src","image","alt","name","Menu","props","menu","dishes","map","onClick","isLoading","errMess","active","Header","toggleNav","bind","toggleModal","handleLogin","state","isNavOpen","isModalOpen","this","setState","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","href","height","isOpen","navbar","outline","toggle","onSubmit","htmlFor","type","innerRef","input","check","color","Component","addComment","comment","payload","dishesLoading","dishesFailed","addDishes","commentsFailed","addComments","comments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","leader","RenderDish","in","transformProps","exitTransform","description","RenderComments","postComment","dishId","cmts","author","Intl","DateTimeFormat","year","month","day","format","Date","date","minLength","len","val","length","CommentForm","handleSubmit","values","rating","select","model","selected","hidden","text","validators","maxLength","show","messages","textarea","rows","Dishdetail","dishItem","commentItem","Footer","RenderCard","item","designation","Home","dishLoading","dishErrMess","promotion","promoLoading","promoErrMess","leaderLoading","leaderErrMess","required","isNumber","isNaN","Number","validEmail","test","Contact","firstname","lastname","telnum","email","agree","contactType","message","touched","errors","split","filter","x","resetFeedbackForm","postFeedback","validate","role","md","placeholder","size","offset","checkbox","RenderLeader","console","log","tag","left","middle","object","body","heading","About","leaders","title","list","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","catch","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.795494b1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nfunction RenderMenuItem({ dish }) {\r\n    return (\r\n        <Card key={dish.id}>\r\n            <Link to={`/menu/${dish.id}`}>\r\n                <CardImg width=\"100%\" src={ baseUrl+dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1 offset-md-1\">\r\n                <RenderMenuItem dish={dish} onClick={props.onClick} />\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if (props.dishes.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, \r\n        Jumbotron, Modal, ModalHeader, ModalBody,Button,\r\n    Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n      \r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                    <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Header;","import * as ActionTypes from './ActionTypes';\r\nimport { DISHES } from '../shared/dishes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n  type: ActionTypes.ADD_COMMENT,\r\n  payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n  const newComment = {\r\n    dishId: dishId,\r\n    rating: rating,\r\n    author: author,\r\n    comment: comment\r\n  };\r\n  newComment.date = new Date().toISOString();\r\n\r\n  return fetch(baseUrl + 'comments', {\r\n    method: \"POST\",\r\n    body: JSON.stringify(newComment),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    credentials: \"same-origin\"\r\n  })\r\n    .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n      error => {\r\n        throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error => { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: ' + error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n  dispatch(dishesLoading(true));\r\n\r\n  return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n      error => {\r\n        var errMess = new Error(error.message);\r\n        throw errMess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n  type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errMess) => ({\r\n  type: ActionTypes.DISHES_FAILED,\r\n  payload: errMess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n  type: ActionTypes.ADD_DISHES,\r\n  payload: dishes\r\n});\r\nexport const fetchComments = () => (dispatch) => {\r\n  return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n      error => {\r\n        var errMess = new Error(error.message);\r\n        throw errMess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errMess) => ({\r\n  type: ActionTypes.COMMENTS_FAILED,\r\n  payload: errMess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n  type: ActionTypes.ADD_COMMENTS,\r\n  payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n\r\n  dispatch(promosLoading());\r\n\r\n  return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n      error => {\r\n        var errMess = new Error(error.message);\r\n        throw errMess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\nexport const promosLoading = () => ({\r\n  type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errMess) => ({\r\n  type: ActionTypes.PROMOS_FAILED,\r\n  payload: errMess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n  type: ActionTypes.ADD_PROMOS,\r\n  payload: promos\r\n});\r\n/************************************************* */\r\nexport const fetchLeaders = () => (dispatch) => {\r\n\r\n  dispatch(leadersLoading());\r\n\r\n  return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n      error => {\r\n        var errMess = new Error(error.message);\r\n        throw errMess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errMess) => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errMess\r\n});\r\n\r\nexport const addLeaders = (leader) => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leader\r\n});\r\n\r\n\r\n/*****************************************************************/\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n  const newComment = {\r\n    firstname: firstname,\r\n    lastname: lastname,\r\n    telnum: telnum,\r\n    email: email,\r\n    agree: agree,\r\n    contactType: contactType,\r\n    message: message,\r\n  };\r\n\r\n  return fetch(baseUrl + 'feedback', {\r\n    method: \"POST\",\r\n    body: JSON.stringify(newComment),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    credentials: \"same-origin\"\r\n  })\r\n    .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n      error => {\r\n        throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => { dispatch(addComment(response))\r\n                        alert('Your comment has been posted'+JSON.stringify(response));\r\n    })\r\n\r\n    .catch(error => { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: ' + error.message); });\r\n};","export const ADD_COMMENT = 'ADD_COMMENT'; \r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADER_FAILED';\r\n\r\n","import React, { Component } from 'react';\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem, Button,\r\n    Modal, ModalHeader, ModalBody, Row,\r\n    Label\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { postComment } from '../redux/ActionCreators';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\n\r\n\r\n\r\nfunction RenderDish(props) {\r\n    const dish = props.dish;\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (dish != null) {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <FadeTransform\r\n                    in\r\n                    transformProps={{\r\n                        exitTransform: 'scale(0.5) translateY(-50%)'\r\n                    }}>\r\n                    <Card>\r\n                        <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText>\r\n                                {dish.description}\r\n                            </CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction RenderComments(props) {\r\n    const dish = props.comments;\r\n    const postComment = props.postComment;\r\n    const dishId = props.dishId;\r\n    if (dish != null) {\r\n        const cmts = dish.map(comment => {\r\n            return (\r\n                <Fade in>\r\n                    <li key={comment.id}>\r\n                        <p>{comment.comment}</p>\r\n                        <p>-- {comment.author},\r\n                        &nbsp;\r\n                        {new Intl.DateTimeFormat('en-US', {\r\n                            year: 'numeric',\r\n                            month: 'long',\r\n                            day: '2-digit'\r\n                        }).format(new Date(comment.date))}\r\n                        </p>\r\n                    </li>\r\n                </Fade>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className='col-12 col-md-5 m-1'>\r\n                <h4> Comments </h4>\r\n                <ul className='list-unstyled'>\r\n                    <Stagger in>\r\n                        {cmts}\r\n\r\n                    </Stagger>\r\n\r\n                </ul>\r\n                <CommentForm dishId={dishId}\r\n                    postComment={postComment} />\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        }\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button outline onClick={this.toggleModal} color=\"secondary\"><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment</Button>{' '}\r\n\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <div className=\"container\">\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"rating\">Rating</Label>\r\n                                    <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option selected hidden>Choose here</option>\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"4\">4</option>\r\n                                        <option value=\"5\">5</option>\r\n                                    </Control.select>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"name\">Your Name</Label>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        className=\"form-control\"\r\n                                        validators={{ maxLength: maxLength(15), minLength: minLength(3) }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".name\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            minLength: 'Name must be greater than 3 characters',\r\n                                            maxLength: 'Name must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"comment\">Comment</Label>\r\n                                    <Control.textarea model=\".comment\" id=\".comment\" name=\"comment\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Button color=\"primary\">Submit</Button>{' '}\r\n                                </Row>\r\n                            </div>\r\n\r\n\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default function Dishdetail(props) {\r\n    const dishItem = <RenderDish dish={props.dish} />\r\n    const commentItem = <RenderComments comments={props.comments}\r\n        postComment={props.postComment}\r\n        dishId={props.dish.id} />\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null)\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {dishItem}\r\n                    {commentItem}\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nfunction Footer(props) {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to='/home'>Home</Link></li>\r\n                            <li><Link to='/aboutus'>About Us</Link></li>\r\n                            <li><Link to='/menu'>Menu</Link></li>\r\n                            <li><Link to='/contactus'>Contact Us</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n                            <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                                confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport {\r\n  Card, CardImg, CardText, CardBody,\r\n  CardTitle, CardSubtitle\r\n} from 'reactstrap';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Loading } from './LoadingComponent';\r\nimport { FadeTransform, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n  if (isLoading) {\r\n    return (\r\n      <Loading />\r\n    );\r\n  }\r\n  else if (errMess) {\r\n    return (\r\n      <h4>{errMess}</h4>\r\n    );\r\n  }\r\n  else\r\n    return (\r\n      <FadeTransform\r\n        in\r\n        transformProps={{\r\n          exitTransform: 'scale(0.5) translateY(-50%)'\r\n        }}>\r\n        <Card>\r\n          <CardImg src={baseUrl + item.image} alt={item.name} />\r\n          <CardBody>\r\n            <CardTitle>{item.name}</CardTitle>\r\n            {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n            <CardText>{item.description}</CardText>\r\n          </CardBody>\r\n        </Card>\r\n      </FadeTransform>\r\n    );\r\n}\r\n\r\n\r\nfunction Home(props) {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row align-items-start\">\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard item={props.dish}\r\n            isLoading={props.dishLoading}\r\n            errMess={props.dishErrMess}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard item={props.promotion}\r\n            isLoading={props.promoLoading}\r\n            errMess={props.promoErrMess}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard item={props.leader}\r\n            isLoading={props.leaderLoading}\r\n            errMess={props.leaderErrMess}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;   ","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Label, Col, Button, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'Tel.',\r\n            message: '',\r\n            touched: {\r\n                firstname: false,\r\n                lastname: false,\r\n                telnum: false,\r\n                email: false\r\n            }\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n\r\n    validate(firstname, lastname, telnum, email) {\r\n        const errors = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: ''\r\n        }\r\n        if (this.state.touched.firstname && firstname.length < 3) {\r\n            errors.firstname = 'First Name should be >=3 characters';\r\n        } else if (this.state.touched.firstname && firstname.length > 10) {\r\n            errors.firstname = 'First Name should be <=10 characters';\r\n        }\r\n        if (this.state.touched.lastname && lastname.length < 3) {\r\n            errors.firstname = 'Last Name should be >=3 characters';\r\n        } else if (this.state.touched.lastname && lastname.length > 10) {\r\n            errors.firstname = 'Last Name should be <=10 characters';\r\n        }\r\n\r\n        const reg = /\\d{10}/;\r\n        if (this.state.touched.telnum && !reg.test(telnum))\r\n            errors.telnum = 'Tel. Number should contain only numbers';\r\n\r\n        if (this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\r\n            errors.email = 'Email should contain a @'\r\n\r\n        return errors;\r\n    }\r\n\r\n\r\n\r\n    handleSubmit(values) {\r\n      /*  console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));*/\r\n        this.props.resetFeedbackForm();\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\r\n    }\r\n    render() {\r\n        const postFeedback = this.props.postFeedback;\r\n        const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid email address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\"\r\n                                                name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Contact;\r\n","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl'\r\nimport { FadeTransform, Stagger } from 'react-animation-components';\r\n\r\n\r\nfunction RenderLeader({ leader }) {\r\n    console.log(\"RenderLeader\");\r\n    console.log(leader);\r\n    return (\r\n        <FadeTransform\r\n            in\r\n            transformProps={{\r\n                exitTransform: 'scale(0.5) translateY(-50%)'\r\n            }}>\r\n            <Media tag=\"li\">\r\n                <Media left middle>\r\n                    <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                </Media>\r\n                <Media body>\r\n                    <Media heading>{leader.name}</Media>\r\n                    <p>{leader.designation}</p>\r\n                    <p>{leader.description}</p>\r\n                </Media>\r\n            </Media>\r\n        </FadeTransform>\r\n    );\r\n}\r\n\r\nfunction About(props) {\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n            <RenderLeader leader={leader} />\r\n        );\r\n    });\r\n\r\n    if (props.leaders.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.leaders.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>About Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <h2>Our History</h2>\r\n                        <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                        <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5\">\r\n                        <Card>\r\n                            <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                            <CardBody>\r\n                                <dl className=\"row p-1\">\r\n                                    <dt className=\"col-6\">Started</dt>\r\n                                    <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                    <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                    <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                    <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                    <dd className=\"col-6\">$1,250,375</dd>\r\n                                    <dt className=\"col-6\">Employees</dt>\r\n                                    <dd className=\"col-6\">40</dd>\r\n                                </dl>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <Card>\r\n                            <CardBody className=\"bg-faded\">\r\n                                <blockquote className=\"blockquote\">\r\n                                    <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                I'm not hungry enough to eat six.</p>\r\n                                    <footer className=\"blockquote-footer\">Yogi Berra,\r\n                            <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                P. Pepe, Diversion Books, 2014</cite>\r\n                                    </footer>\r\n                                </blockquote>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h2>Corporate Leadership</h2>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <h4>{props.leaders.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>About Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <h2>Our History</h2>\r\n                        <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                        <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5\">\r\n                        <Card>\r\n                            <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                            <CardBody>\r\n                                <dl className=\"row p-1\">\r\n                                    <dt className=\"col-6\">Started</dt>\r\n                                    <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                    <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                    <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                    <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                    <dd className=\"col-6\">$1,250,375</dd>\r\n                                    <dt className=\"col-6\">Employees</dt>\r\n                                    <dd className=\"col-6\">40</dd>\r\n                                </dl>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <Card>\r\n                            <CardBody className=\"bg-faded\">\r\n                                <blockquote className=\"blockquote\">\r\n                                    <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                    <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                    </footer>\r\n                                </blockquote>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h2>Corporate Leadership</h2>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <Media list>\r\n                            <Stagger in>\r\n                                {leaders}\r\n                            </Stagger>\r\n                        </Media>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default About;    ","import React, { Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport Header from './HeaderComponent';\r\nimport Dishdetail from './DishdetailComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, postFeedback, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../redux/ActionCreators'\r\nimport { actions } from 'react-redux-form'\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        promotions: state.promotions,\r\n        leaders: state.leaders\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n    postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\r\n    fetchDishes: () => { dispatch(fetchDishes()) },\r\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\r\n    fetchComments: () => dispatch(fetchComments()),\r\n    fetchPromos: () => dispatch(fetchPromos()),\r\n    fetchLeaders: () => dispatch(fetchLeaders())\r\n});\r\n\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n    }\r\n    render() {\r\n        const HomePage = () => {\r\n            console.log(\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\");\r\n            return (\r\n                <Home\r\n                    dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                    dishLoading={this.props.dishes.isLoading}\r\n                    dishErrMess={this.props.dishes.errMess}\r\n\r\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n                    promoLoading={this.props.promotions.isLoading}\r\n                    promoErrMess={this.props.promotions.errMess}\r\n\r\n                    leader={this.props.leaders.leaders.filter((promo) => promo.featured)[0]}\r\n                    leaderLoading={this.props.leaders.isLoading}\r\n                    leaderErrMess={this.props.leaders.errMess}\r\n                />\r\n            );\r\n        }\r\n\r\n        const DishWithId = ({ match }) => {\r\n            return (\r\n\r\n                <Dishdetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n                    isLoading={this.props.dishes.isLoading}\r\n                    errMess={this.props.dishes.errMess}\r\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\r\n                    commentsErrMess={this.props.comments.errMess}\r\n                    postComment={this.props.postComment}\r\n                />\r\n\r\n\r\n            );\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div>\r\n                    <TransitionGroup>\r\n                        <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                            <Switch location={this.props.location}>\r\n                                <Route path='/home' component={HomePage} />\r\n                                <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />\r\n                                <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                                <Route path='/menu/:dishId' component={DishWithId} />\r\n                                <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm}\r\n                                                                                postFeedback={this.props.postFeedback}/>}\r\n                                />\r\n                                <Redirect to=\"/home\" />\r\n                            </Switch>\r\n                        </CSSTransition>\r\n                    </TransitionGroup>\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = {  errMess: null, \r\n                                    comments: [] }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return { ...state, errMess: null, comments: action.payload };\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return { ...state, errMess: action.payload };\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return { ...state, comments: state.comments.concat(comment) };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = {   isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state  = {   isLoading: true,\r\n                                        errMess: null,\r\n                                        leaders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n        return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component } from 'react';\nimport './App.css';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nexport default class App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n\n    );\n  }\n}\n\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nimport {createForms} from 'react-redux-form'\r\nimport { InitialFeedback } from './forms'\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}